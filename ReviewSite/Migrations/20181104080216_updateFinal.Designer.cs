// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviewSite;

namespace ReviewSite.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20181104080216_updateFinal")]
    partial class updateFinal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReviewSite.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = 1, Name = "Concerts" },
                        new { Id = 2, Name = "Books" },
                        new { Id = 3, Name = "Dining" },
                        new { Id = 4, Name = "Album" }
                    );
                });

            modelBuilder.Entity("ReviewSite.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Content");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new { Id = 1, CategoryId = 1, Content = "Hard Rain rocked the house to a sold out crowd Friday August 10th, 2018 ", ImageUrl = "/images/band.jpg", Title = "Hard Rain at MusicBox Supper Club" },
                        new { Id = 2, CategoryId = 2, Content = "The classic by Tom Clancy that inpired the movie of the same name!", ImageUrl = "/images/redOctober.jpg", Title = "Hunt for Red Oktober" },
                        new { Id = 3, CategoryId = 2, Content = "the timeless John Steinbeck classic", ImageUrl = "/images/ofMiceAndMen.jpg", Title = "Of Mice and Men" },
                        new { Id = 4, CategoryId = 4, Content = "Blue Eyed Soul, Rhythym and Blues from \"The PGH Rockers\" featuring the hits \"Darkest Side of Town\" and \"The Man Who Won The War\"", ImageUrl = "/images/deepInTheShadows.jpg", Title = "Deep In The Shadows" },
                        new { Id = 5, CategoryId = 3, Content = "Jeet jet? Jah wanna sammich N'at? then yinz better get dahntahn for this-un. I cut the sammiches half in two for yinz cuz Mills on Wills don't never bring halupki, haluski, or kolachis. It's a 'Burgh Thing!", ImageUrl = "/images/primantiBros.jpg", Title = "Primanti Bothers" }
                    );
                });

            modelBuilder.Entity("ReviewSite.Models.Review", b =>
                {
                    b.HasOne("ReviewSite.Models.Category", "Category")
                        .WithMany("Reviews")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
