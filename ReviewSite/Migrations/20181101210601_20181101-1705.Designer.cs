// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviewSite;

namespace ReviewSite.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20181101210601_20181101-1705")]
    partial class _201811011705
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReviewSite.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = 1, Name = "Concert" },
                        new { Id = 2, Name = "Book" },
                        new { Id = 3, Name = "Food" },
                        new { Id = 4, Name = "Album" }
                    );
                });

            modelBuilder.Entity("ReviewSite.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Content");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new { Id = 1, CategoryId = 1, Content = "Hard Rain rocked the house to a sold out crowd Friday 10-19-18", ImageUrl = "./www.root/images/NemoMuseum.jpg", Title = "Hard Rain at Natalies Coal Fired Pizza" },
                        new { Id = 2, CategoryId = 2, Content = "The classic by Tom Clancy that inpired the movie of the same name!", ImageUrl = "./www.root/images/bookcover.jpg", Title = "Hunt for Red Oktober" },
                        new { Id = 3, CategoryId = 2, Content = "the timeless John Steinbeck classic", ImageUrl = "./www.root/images/bookcover.jpg", Title = "Of Mice and Men" },
                        new { Id = 4, CategoryId = 4, Content = "Blue Eyed Soul, Rythem and Blues from \"The PGH Rockers\" ", ImageUrl = "./www.root/images/album.jpg", Title = "Deep In The Shadows" },
                        new { Id = 5, CategoryId = 3, Content = "If grease brings you gastronomic peace, then this dish should be your wish!", ImageUrl = "./www.root/images/piggyLunch.jpg", Title = " Double Philly Cheese Steak Deluxe from Mr. Hero" }
                    );
                });

            modelBuilder.Entity("ReviewSite.Models.Review", b =>
                {
                    b.HasOne("ReviewSite.Models.Category", "Category")
                        .WithMany("Reviews")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
